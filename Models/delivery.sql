-- MySQL Script generated by MySQL Workbench
-- Thu Aug 20 14:39:46 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema delivery
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema delivery
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `delivery` DEFAULT CHARACTER SET utf8 ;
USE `delivery` ; 

-- -----------------------------------------------------
-- Table `delivery`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `delivery`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `tlfn` VARCHAR(32) NULL,
  `type` ENUM('basic', 'delivery', 'admin') NOT NULL DEFAULT 'basic',
  `verified` BIT NULL DEFAULT 0,
  `custom` VARCHAR(255) NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `delivery`.`service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `delivery`.`service` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `owner` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `status` BIT NOT NULL,
  `image` VARCHAR(255) NULL,
  `created_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `service_owner`
    FOREIGN KEY (`owner`)
    REFERENCES `delivery`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `delivery`.`permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `delivery`.`permission` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idservice` INT NOT NULL,
  `iduser` INT NOT NULL,
  `status` BIT NOT NULL DEFAULT 0,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `permission_service`
    FOREIGN KEY (`idservice`)
    REFERENCES `delivery`.`service` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `permission_user`
    FOREIGN KEY (`iduser`)
    REFERENCES `delivery`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `delivery`.`request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `delivery`.`request` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idservice` INT NOT NULL,
  `iduser` INT NOT NULL,
  `idmanager` INT NOT NULL,
  `from_lat` FLOAT(10,6) NULL DEFAULT 0,
  `from_lng` FLOAT(10,6) NULL DEFAULT 0,
  `to_lat` FLOAT(10,6) NULL DEFAULT 0,
  `to_lng` FLOAT(10,6) NULL DEFAULT 0,
  `from_time` DATETIME NULL,
  `delivery_time` DATETIME NULL,
  `status` ENUM('pending', 'acepted', 'on way', 'delivered', 'canceled') NOT NULL DEFAULT 'pending',
  `qualification` INT NULL,
  `msg` VARCHAR(255) NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `request_user`
    FOREIGN KEY (`iduser`)
    REFERENCES `delivery`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `request_service`
    FOREIGN KEY (`idservice`)
    REFERENCES `delivery`.`service` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `request_manager`
    FOREIGN KEY (`idmanager`)
    REFERENCES `delivery`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `delivery`.`request_end`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `delivery`.`request_end` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `iduser` INT NOT NULL,
  `idservice` INT NOT NULL,
  `idmanager` INT NOT NULL,
  `from_lat` FLOAT(10,6) NULL,
  `from_lng` FLOAT(10,6) NULL,
  `to_lat` FLOAT(10,6) NULL,
  `to_lng` FLOAT(10,6) NULL,
  `time` FLOAT NULL,
  `qualification` INT NULL,
  `msg` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `end_request`
    FOREIGN KEY (`idservice`)
    REFERENCES `delivery`.`service` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `delivery`.`worktime`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `delivery`.`worktime` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `iduser` INT NOT NULL,
  `idservice` INT NOT NULL,
  `status` BIT NULL,
  `date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `work_user`
    FOREIGN KEY (`iduser`)
    REFERENCES `delivery`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `work_service`
    FOREIGN KEY (`idservice`)
    REFERENCES `delivery`.`service` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `delivery`;

DELIMITER $$
USE `delivery`$$
CREATE DEFINER = CURRENT_USER TRIGGER `delivery`.`permission_AFTER_UPDATE` AFTER UPDATE ON `permission` FOR EACH ROW
BEGIN
	IF new.status = TRUE THEN
		INSERT INTO worktime(iduser,idservice,status) VALUES(old.iduser,old.idservice,new.status);
	END IF;
END$$

USE `delivery`$$
CREATE DEFINER = CURRENT_USER TRIGGER `delivery`.`request_AFTER_UPDATE` AFTER UPDATE ON `request` FOR EACH ROW
BEGIN
	IF new.status = 'delivered' THEN
		INSERT INTO request_end(iduser,idservice,idmanager,from_lat,from_lng,to_lat,to_lng,`time`,qualification,msg) 
			   VALUES(old.iduser,old.idservice,old.idmanager,old.from_lat,old.from_lng,old.to_lat,old.to_lng,current_timestamp-old.from_time,old.qualification,old.msg);
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
